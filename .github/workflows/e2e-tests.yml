name: E2E Tests

on:
  push:
    branches-ignore:
      - main
      - master
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run tests on'
        required: true
        default: 'main'
        type: string
      run_coverage:
        description: 'Run with coverage report'
        required: false
        default: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.branch || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create environment files
        run: |
          printf "%s" "${{ secrets.TWITTER_VERIFICATION_ENV }}" > ./web3-functions/twitter-verification/.env
          printf "%s" "${{ secrets.TWITTER_WORKER_ENV }}" > ./web3-functions/twitter-worker/.env
          printf "%s" "${{ secrets.TWITTER_WORKER_PROD_ENV }}" > ./web3-functions/twitter-worker/prod.env
          printf "%s" "${{ secrets.TEST_ENV }}" > ./test/.env

      - name: Run tests with coverage
        run: |
          yarn test ${{ github.event_name == 'workflow_dispatch' && inputs.run_coverage && '--coverage' || '' }}
        env:
          JEST_JUNIT_OUTPUT_DIR: ./test-results
          JEST_JUNIT_OUTPUT_NAME: junit.xml

      - name: Install mocha-junit-reporter
        run: yarn add --dev mocha-junit-reporter

      - name: Publish Test Results
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/junit.xml'
          check_name: 'Test Results'
          fail_on_failure: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always() && (github.event_name != 'workflow_dispatch' || inputs.run_coverage)
        with:
          name: coverage-report
          path: |
            coverage/
            test-results/
          retention-days: 14

      - name: Comment PR with Test Summary
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            
            const summary = `## Test Results Summary
            
            ### Coverage Report
            - Statements: ${coverage.total.statements.pct}%
            - Branches: ${coverage.total.branches.pct}%
            - Functions: ${coverage.total.functions.pct}%
            - Lines: ${coverage.total.lines.pct}%
            
            Detailed coverage report is available in the workflow artifacts.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });